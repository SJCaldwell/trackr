language: python
python:
- '2.7'
install:
- pip install coveralls
- python setup.py install
- version="$(wget -q -O - http://sourceforge.net/projects/opencvlibrary/files/opencv-unix | egrep -m1 -o '\"[0-9](\.[0-9]+)+' | cut -c2-)"
- echo "Installing OpenCV" $version
- mkdir OpenCV
- cd OpenCV
- echo "Removing any pre-installed ffmpeg and x264"
- sudo apt-get -qq remove ffmpeg x264 libx264-dev
- echo "Installing Dependenices"
- sudo apt-get -qq install libopencv-dev build-essential checkinstall cmake pkg-config yasm libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy libtbb-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils ffmpeg cmake checkinstall
- echo "Downloading OpenCV" $version
- wget -O OpenCV-$version.zip http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/$version/opencv-"$version".zip/download
- echo "Installing OpenCV" $version
- unzip OpenCV-$version.zip
- cd opencv-$version
- mkdir build
- cd build
- cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..
- make -j2
- sudo checkinstall -y
- sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
- sudo ldconfig
- echo "OpenCV" $version "ready to be used"
- cd ..
- cd ..
- cd ..

script:
- python setup.py test
after_success:
- coveralls
env:
  matrix:
  - MONGO_URI=http://api4trackr.herokuapp.com
  - BUILDPACK_URL=https://github.com/heroku/heroku-buildpack-python
  global:
  - secure: ZybwspjVoHYJrXTOED+4YUGnak47Z+P5+0qNezBjgMFzKMK2svxsnQlswlSPsrp3rQd664ybxCsZiwOIIAvYgwu7qS9Q1kcQsbU5G6PbypG2jeRqB0VDLemJY0quzh+sIu4DPzoV/gCiQWWc0y5z6usl2kutG9yfjBqgQ8AlgDlCBnZBy6WyxuaM7euIJksqE6WrMj9qw6O5+iY7sScVIIfW4lVtKfiNhdIjdkpsMyrH5LTWCFZR8lMrlfNoP7A0ExusqBLgK1J3Kh6KosJkBasExjmnBlSXe7xx9Gx7JEetDIsciEhM12PDUBszR5dGE3pOHFw1lhrG/3h4yktSO1Lmjngw2a76yKYKz0UVuPrI7dBn8S0eelp3Nm4Zz8P1LXPXcZs6gie2f55gDYrDrWRx3KRtAa4KfNf6lg9KenI8xr2m2qOFX2V2eG7LMoUtdOho61BQ0rK0DjTvbGJSj8mTA3nNiohKWLWJ8WIWC3moez2g+5Kfyjzpm/yjUA953sFM4VTO6OZN/jc9WDkSqQsiA3+Sgj28lSsMgOzSKkc8XKihY06j/hBNXnEw5DhdDlmOP1GXP68f8GxgnGvwgnelvW3lmAJL0cvvsp+OfBoeBnqQyPYsRcdlhbcrZh91R8hT2D/JuZAAO1rJVUNsRnP7H8P722twx4efE/QGs28=
  - secure: SCCpPpIgOWZsXsPmdjMM7vuFmIGsBwVvdoLli1hZyeMD1gNPRJHtczozf3mkbvvPZnIzdCnl1yzZ0IrLMD4Gz3EBIbtQ4kMG0NcK/O7zkoXmUyh5MOhrRkh43J4mArgCMBeBtampJr2teVeEye2H8iyPOgGNktRmJ38pzACer716bTgUR7hI3Iu+eV/mL7wwO1GDcPr4Okf9PlO8MT14ffebgxDCA2eJFgvTrH4iBLAg73o82myd7SIU0Ui1m8TnYIGs11TrUe+QYsCk8gi7xSxF5YIRDHGMuuRHOnek4dcpBh4TR8j2YgRBxBxKHElEwCbNDbGPloEF6tykKunOulZfQDg7dA5mNzVz0XgZ1HdIuh/runnoKBbXqgwVVDiM4ercIZhkUTgpfA/8aGn+L9YI7QgzLyQAivWeUGek7mxkEoII3iTGCJSDWOLDmRUa6XWjXUsE6SNbqKGTRyGSTYzqC7IHPHCx14sCr1ywG2XJ14o+WSNFhZLAxg4WJDP04mArhvc3V1PCVBTO50lZVqepHNbUQORX5lCZYcyDnFuE6XIAxUIM5TL2JMO/XYPApHMF8HLMQ0to+Iw7T1g+sYRSscrpbC2/z9MF8E9BVi+9lT0FTseha00q2me5B9GiSRQdSLsANeTfo0d53hQfxcws0U5+t6zdCWwPFbnWIbg=
  - secure: tf22t80dqWe56dU7Vg8Gm/4pLHypDLmlVdkYgiRpQLkvdyVFFDJ1woQ41jxzPehC0dCP6YWTGRyzxOQE+mQ/sVeBFKVFLp4ySTYeshre0FLMULAjpJadzh5LcFk9UOWgNyDz3zglp5cRYxUEpvKSk626aMNcFZ0hH/aOcPB5xSXWw4KtL9yyF1lOZwpXE+MsL6kFRpKRWLPkYNdoe+cX6J+Vx6EDq7xvajFXdMUnL7KdbSBZvN+hSMhIA6kqIto0E+tNSsXxBUmfYpnt4Topgux8a5NWoPHJSliW4xDpg+NX3+ZMndaTJu2sNtlsgcV+EqIGMT1ronewWw5Up4ToetPIATtB9JHWH0CBAmF1xpJsbuh07Kf+otWroDrOhC6zjamsixlJO1qIh9bVpcUWUFN1qJLc4AjnMV76XeBRtdObKbBhFAVGAZAAHTkJADdWT3TrvSQg9K3feNgDEKyxoWSrMcYLRVmqLHV9qs6YTM9iOhcd+KPt9uFxrCQsC9fK7cKra//lKBN/e6Y7XYKyT2Byua20n5/Q7VqZSa+3Ax+6HhI+lOMc3y+V65qRWNOertXwCjGaNdofcN980HlUNlNv1w8hLzqzhaJIubRHiZz0pPDQjcubXvi7uiFUCl8mnrTgt9WzgMf6n8EWr7coRSPd9CfUuVqd21qhcCd9Z9A=
deploy:
  provider: heroku
  api_key:
    secure: RSCQarY7wWFpaR+slYn8NUkhYO2p0T7+95r4C+lTZ0SG1ogcLYmjw4/GmrS8k8mdJ+jUspc5G2v0YrikWPeDdxV5bvRLkEoTZMkaSomAgRjB3tHf/JpfJ6IrJrm8sVPPWwV1QMYzC+KJ33DAw6ZgwAW6rqqycujsKaLCTKv9ITgAWcvxWzEYuesoMSryelV11pR+Vgm8iBuJD+R3bmbZcFnd2Msk+R9GaanvJ/Umr8GLviMS64CshCRx8yV3ORfHXDIsLndJvxCOcW/USg1wYbp6crZxTuGxnnpo2pvo5BFlIEEbiqLvVADWjK+p8cwysyRVYFntJfkJ4/yVNPuOmJcsOKBJ5an86HODavAcBUR00sRwbHqGi+IxnHVUHj6lVbOBjDm+EmmZAQ30/rac4RLa8i9V4a9mL7OAp2W2eP/a+06/2SrO4JMlaJjF/SHco54NepdZViW4iBeCdpXhdDjvT4shSrQ0etW49U3hyD2zvHjXjSR8L0K8F5RZuVbd5aPpsTGIdDuagdh/jTxpYwM7Wd9LjDIz8RUzLnjEYxqo+p2XZ9VDtler9+RqUR7Dp22VZnjZ0UmLP7AuYRBJCPLEoalukQt5V4hRhHyUpdmvyqWmyYRr47sS3sW+Pg83dXojjcpTxFdWWaHLhsNMGKZOOz8udLx5bNt7asCZn98=
  app: bartrackr
  on:
    repo: bencarothers/trackr
